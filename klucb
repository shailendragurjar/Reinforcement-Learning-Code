#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Wed Aug  9 23:58:09 2017

@author: shailendragurjar
"""

#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Wed Aug  9 17:10:49 2017

@author: shailendragurjar
"""

from math import log, sqrt, exp
import numpy as np

# k number of times an arm has been pulled
# set est_values[] = 0
# pull each arm once and collect reward
# update est_values
# est_values = [est_values*(k-1)+reward]/k

# after pulling each arm once 
# Calculate KLUCB (function defined later) for each arm
# pull the arm for which the KLUCB is maximum
# repeat till horizon

cumReward = 10. #it is same as est_values
nbDraws = 25.  # number of times an arm has been pulled. different arms can be pulled differnt number of times
c = 1.  #constant
t= 80.  # number of the times all arms have been pulled
x = cumReward/nbDraws
d = c*log(t)/nbDraws



def KLUCB(x, d,lowerbound=-float('inf'), precision=1e-6):
    upperbound = min(1.,x+sqrt(2*d))
    l = max(x, lowerbound)
    u = upperbound
    while u-l>precision:
        m = (l+u)/2
        if  (x*log(x/m)+(1-x)*log((1-x)/(1-m)))>d:
            u = m
        else:
            l = m
    return (l+u)/2 


